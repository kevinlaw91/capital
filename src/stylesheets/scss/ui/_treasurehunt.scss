/* ============================================================================
** Mini Game: Treasure Hunt
** ==========================================================================*/
.treasurehunt {
	&.animate_on {
		transform: scale(1.3) perspective( 1000px ) rotateX(-50deg) translateY(-100px);
		animation: treasurehunt-reveal, fade-in;
		animation-duration: 1s;
		animation-timing-function: $easeOutQuint;
		animation-fill-mode: forwards;
		@at-root {
			@keyframes treasurehunt-reveal {
				100% {
					transform: none;
				}
			}
		}

		h1, h2 {
			// Contents transition
			transform: translateY(-20px);
			animation: treasurehunt-transition, fade-in;
			animation-duration: 0.5s;
			animation-fill-mode: both;
		}

		.grid {
			transform: translateY(-50px);
			animation: treasurehunt-transition;
			animation-duration: 0.5s;
			animation-delay: 0.3s;
			animation-fill-mode: forwards;
		}

		@at-root {
			@keyframes treasurehunt-transition {
				100% {
					transform: none;
				}
			}
		}

		.cell {
			transform: scale(0.7);
			animation: treasurehunt-cell-transition, fade-in;
			animation-duration: 0.5s;
			animation-fill-mode: both;
			@at-root {
				@keyframes treasurehunt-cell-transition {
					100% {
						transform: unset;
					}
				}
			}

			@for $i from 1 through 9 {
				&:nth-of-type(#{$i}) {
					animation-delay: 250ms + $i*50ms;
				}
			}
		}
	}

	&.animate_off {
		@extend .no-pointer-events;
		transform: none;
		animation: treasurehunt-dismiss, fade-out;
		animation-duration: 2s;
		animation-timing-function: $easeOutQuint;
		@at-root {
			@keyframes treasurehunt-dismiss {
				100% {
					transform: scale(2);
				}
			}
		}
	}

	h1, h2 {
		position: relative;
		font-family: "Merriweather Sans", sans-serif;
		text-align: center;
		font-weight: 600;
	}

	h1 {
		font-size: 1.3rem;
		height: 1.0rem;
		color: #fff;
		animation-delay: 0.4s !important;
		text-shadow: 0 1px 1px black(0.5);

		span {
			// Added subtle rotation to prevent shaky transition
			transform: scale(1.3) rotate(0.02deg);

			&.animate_off {
				transform: scale(1.3);
				opacity: 0;
			}
		}
	}

	h2 {
		font-size: 0.8rem;
		height: 1.5rem;
		color: white(0.85);
		animation-delay: 0.8s !important;
		line-height: 2rem;

		span {
			transform: translateY(10px);

			&.animate_off {
				transform: translateY(-10px);
				opacity: 0;
			}
		}
	}

	*[aria-role='status'] span {
		display: block;
		position: absolute;
		width: 100%;
		transition: transform, opacity;
		transition-duration: 1s;
		opacity: 0;

		&.animate_on {
			transform: none;
			opacity: 1;
		}
	}

	.container {
		background-color: #00a4ff;
		padding: 45px;
	}

	.grid {
		display: flex;
		flex-flow: row wrap;
		margin: 1rem auto;
		width: 330px;

		// Masked
		&:not(.reveal) {
			.cell.masked {
				box-shadow: 0 3px 5px black(0.15), 0 1px 8px black(0.25);

				&::before {
					transform: scale(2);
					opacity: 1;
				}
			}
		}

		// Revealed
		&.reveal {
			.cell.masked {
				background-color: black(0.1);

				&::before {
					opacity: 0;
				}
			}
		}
	}

	.cell {
		// Cells
		@include size(100px);
		position: relative;
		display: inline-block;
		margin: 5px;
		overflow: hidden;
		transition: box-shadow 250ms;
		backface-visibility: hidden; // Fix pixel shifting

		div {
			@include size(100%);
			@include flex-center;
		}

		span {
			font-family: 'Pathway Gothic One', sans-serif;
			font-size: 1.8rem;
			color: #fff;
		}

		&.correct {
			// Contain treasure
			background-color: #fff;
			box-shadow: 0 0 15px 3px white, 0 0 3px 3px #adff8c;

			span {
				color: #1374ab;
				transition: transform 1.5s;
				transform: scale(1.3);
			}
		}

		&.masked {
			span {
				opacity: 0.75;
			}
		}

		&.empty {
			// Empty
			background-color: #3d5be2;
			box-shadow: inset 0 9px 15px -5px black(0.3);
		}

		&:before {
			// Unmasked cell
			@include size(100%);
			position: absolute;
			background-color: #eee;
			content: '';
			display: block;
			border-radius: 50%;
			transform: scale(0);
			opacity: 0;
			transition: transform 0.3s, opacity 0.3s, background-color 0.3s;
		}

		&:hover::before {
			// Cell hover
			background-color: #fff;
		}

		&:active::before {
			// Cell mouse down
			transition: background-color 0.1s;
			background-color: #d7fff7;
		}

	}
}