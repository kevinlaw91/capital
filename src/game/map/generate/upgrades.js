import gRandom from "./utils/gaussianRandom";
import round100 from "./utils/round100";
import summation from "./utils/summation";

// Upgrade to tier 1
const TIER_1 = {
	min: 500,
	avg: 1250,
	max: 2000,
};
// Upgrade to tier 2
const TIER_2 = {
	min: 700,
	avg: 2000,
	max: 3500,
};
// Upgrade to tier 3
const TIER_3 = {
	min: 1500,
	avg: 2250,
	max: 4500,
};
// Upgrade to tier 4
const TIER_4 = {
	min: 2000,
	avg: 3500,
	max: 6000,
};

// Upgrade cost were generated by taking sample from a normal distribution
// Value of each tiers were incremental
export default function () {
	let cost = [
		gRandom(TIER_1.min, TIER_1.avg, TIER_1.max),
		gRandom(TIER_2.min, TIER_2.avg, TIER_2.max),
		gRandom(TIER_3.min, TIER_3.avg, TIER_3.max),
		gRandom(TIER_4.min, TIER_4.avg, TIER_4.max),
	];

	return cost.map(function (v, idx, arr) {
		// An array of every value from index 0 to idx
		const prevValues = arr.slice(0, idx + 1);

		// Rent of each tier were added with previous tier
		const sum = prevValues.reduce(summation);

		// Round result to increments of 100
		return round100(sum);
	});
}